"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[26816],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return d}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?m(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,m=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),c=o(a),d=r,N=c["".concat(p,".").concat(d)]||c[d]||u[d]||m;return a?n.createElement(N,s(s({ref:t},l),{},{components:a})):n.createElement(N,s({ref:t},l))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var m=a.length,s=new Array(m);s[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var o=2;o<m;o++)s[o]=a[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},47931:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var n,r=a(87462),m=a(63366),s=(a(67294),a(3905)),i=["components"],p={description:"Author: @wingkwong | https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/"},o="2160 - Minimum Sum of Four Digit Number After Splitting Digits (Easy)",l={unversionedId:"2100-2199/minimum-sum-of-four-digit-number-after-splitting-digits-easy",id:"2100-2199/minimum-sum-of-four-digit-number-after-splitting-digits-easy",title:"2160 - Minimum Sum of Four Digit Number After Splitting Digits (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/",source:"@site/solutions/2100-2199/2160-minimum-sum-of-four-digit-number-after-splitting-digits-easy.md",sourceDirName:"2100-2199",slug:"/2100-2199/minimum-sum-of-four-digit-number-after-splitting-digits-easy",permalink:"/leetcode-the-hard-way/solutions/2100-2199/minimum-sum-of-four-digit-number-after-splitting-digits-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2160-minimum-sum-of-four-digit-number-after-splitting-digits-easy.md",tags:[],version:"current",sidebarPosition:2160,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/"},sidebar:"tutorialSidebar",previous:{title:"2156 - Find Substring With Given Hash Value (Medium)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/find-substring-with-given-hash-value-medium"},next:{title:"2161 - Partition Array According to Given Pivot (Medium)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/partition-array-according-to-given-pivot-medium"}},u={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting &amp; Greedy",id:"approach-1-sorting--greedy",level:2}],d=(n="SolutionAuthor",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),N={toc:c};function k(e){var t=e.components,a=(0,m.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},N,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"2160---minimum-sum-of-four-digit-number-after-splitting-digits-easy"},"2160 - Minimum Sum of Four Digit Number After Splitting Digits (Easy)"),(0,s.kt)("h2",{id:"problem-link"},"Problem Link"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/"},"https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/")),(0,s.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,s.kt)("p",null,"You are given a ",(0,s.kt)("strong",{parentName:"p"},"positive")," integer ",(0,s.kt)("inlineCode",{parentName:"p"},"num")," consisting of exactly four digits. Split ",(0,s.kt)("inlineCode",{parentName:"p"},"num")," into two new integers ",(0,s.kt)("inlineCode",{parentName:"p"},"new1")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"new2")," by using the ",(0,s.kt)("strong",{parentName:"p"},"digits")," found in ",(0,s.kt)("inlineCode",{parentName:"p"},"num"),". ",(0,s.kt)("strong",{parentName:"p"},"Leading zeros")," are allowed in ",(0,s.kt)("inlineCode",{parentName:"p"},"new1")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"new2"),", and ",(0,s.kt)("strong",{parentName:"p"},"all")," the digits found in ",(0,s.kt)("inlineCode",{parentName:"p"},"num")," must be used."),(0,s.kt)("p",null,"For example, given ",(0,s.kt)("inlineCode",{parentName:"p"},"num = 2932"),", you have the following digits: two ",(0,s.kt)("inlineCode",{parentName:"p"},"2"),"'s, one ",(0,s.kt)("inlineCode",{parentName:"p"},"9")," and one ",(0,s.kt)("inlineCode",{parentName:"p"},"3"),". Some of the possible pairs ",(0,s.kt)("inlineCode",{parentName:"p"},"[new1, new2]")," are ",(0,s.kt)("inlineCode",{parentName:"p"},"[22, 93]"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"[23, 92]"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"[223, 9]")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"[2, 329]"),"."),(0,s.kt)("p",null,"Return ",(0,s.kt)("em",{parentName:"p"},"the ",(0,s.kt)("strong",{parentName:"em"},"minimum")," possible sum of")," ",(0,s.kt)("inlineCode",{parentName:"p"},"new1")," ",(0,s.kt)("em",{parentName:"p"},"and")," ",(0,s.kt)("inlineCode",{parentName:"p"},"new2"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example 1:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Input: num = 2932\nOutput: 52\nExplanation: Some possible pairs [new1, new2] are [29, 23], [223, 9], etc.\nThe minimum sum can be obtained by the pair [29, 23]: 29 + 23 = 52.\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example 2:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Input: num = 4009\nOutput: 13\nExplanation: Some possible pairs [new1, new2] are [0, 49], [490, 0], etc. \nThe minimum sum can be obtained by the pair [4, 9]: 4 + 9 = 13.\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Constraints:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"1000 <= num <= 9999"))),(0,s.kt)("h2",{id:"approach-1-sorting--greedy"},"Approach 1: Sorting & Greedy"),(0,s.kt)("p",null,"We can sort those 4 digits in an increasing order. Let's say ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"a"),(0,s.kt)("mi",{parentName:"mrow"},"b"),(0,s.kt)("mi",{parentName:"mrow"},"c"),(0,s.kt)("mi",{parentName:"mrow"},"d")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"abcd")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"ab"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"d")))))," where ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"a"),(0,s.kt)("mo",{parentName:"mrow"},"<"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"b"),(0,s.kt)("mo",{parentName:"mrow"},"<"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"c"),(0,s.kt)("mo",{parentName:"mrow"},"<"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"d")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a <= b <= c <= d")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"<="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7335em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"<="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"<="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"))))),". We put those two smallest digits to be decimal's place, and those two largest ones in one's place. The answer is simply ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"a"),(0,s.kt)("mi",{parentName:"mrow"},"c"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mi",{parentName:"mrow"},"b"),(0,s.kt)("mi",{parentName:"mrow"},"d")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"ac + bd")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"c"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"b"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"))))),"."),(0,s.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int minimumSum(int num) {\n        string s = to_string(num);\n        vector<int> d;\n        while (num > 0) {\n            d.push_back(num % 10);\n            num /= 10;\n        }\n        sort(d.begin(), d.end());\n        return d[0] * 10 + d[3] + d[1] * 10 + d[2];\n    }\n};\n")))}k.isMDXComponent=!0}}]);