"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[73072],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),k=r,d=m["".concat(l,".").concat(k)]||m[k]||p[k]||i;return n?o.createElement(d,a(a({ref:t},u),{},{components:n})):o.createElement(d,a({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},20512:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var o,r=n(87462),i=n(63366),a=(n(67294),n(3905)),c=["components"],l={description:"Author: @wingkwong | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/"},s="2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)",u={unversionedId:"2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy",id:"2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy",title:"2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/",source:"@site/solutions/2300-2399/2379-minimum-recolors-to-get-k-consecutive-black-blocks-easy.md",sourceDirName:"2300-2399",slug:"/2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy",permalink:"/leetcode-the-hard-way/solutions/2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2379-minimum-recolors-to-get-k-consecutive-black-blocks-easy.md",tags:[],version:"current",sidebarPosition:2379,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/"},sidebar:"tutorialSidebar",previous:{title:"2376 - Count Special Integers (Hard)",permalink:"/leetcode-the-hard-way/solutions/2300-2399/count-special-integers-hard"},next:{title:"2380 - Time Needed to Rearrange a Binary String (Medium)",permalink:"/leetcode-the-hard-way/solutions/2300-2399/time-needed-to-rearrange-a-binary-string-medium"}},p={},m=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}],k=(o="SolutionAuthor",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),d={toc:m};function b(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"2379---minimum-recolors-to-get-k-consecutive-black-blocks-easy"},"2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)"),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given a ",(0,a.kt)("strong",{parentName:"p"},"0-indexed")," string ",(0,a.kt)("inlineCode",{parentName:"p"},"blocks")," of length ",(0,a.kt)("inlineCode",{parentName:"p"},"n"),", where ",(0,a.kt)("inlineCode",{parentName:"p"},"blocks[i]")," is either ",(0,a.kt)("inlineCode",{parentName:"p"},"'W'")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"'B'"),", representing the color of the ",(0,a.kt)("inlineCode",{parentName:"p"},"ith")," block. The characters ",(0,a.kt)("inlineCode",{parentName:"p"},"'W'")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"'B'")," denote the colors white and black, respectively."),(0,a.kt)("p",null,"You are also given an integer ",(0,a.kt)("inlineCode",{parentName:"p"},"k"),", which is the desired number of ",(0,a.kt)("strong",{parentName:"p"},"consecutive")," black blocks."),(0,a.kt)("p",null,"In one operation, you can ",(0,a.kt)("strong",{parentName:"p"},"recolor")," a white block such that it becomes a black block."),(0,a.kt)("p",null,"Return",(0,a.kt)("em",{parentName:"p"},"the ",(0,a.kt)("strong",{parentName:"em"},"minimum")," number of operations needed such that there is at least ",(0,a.kt)("strong",{parentName:"em"},"one")," occurrence of"),(0,a.kt)("inlineCode",{parentName:"p"},"k"),(0,a.kt)("em",{parentName:"p"},"consecutive black blocks.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: blocks = "WBBWWBBWBW", k = 7\nOutput: 3\nExplanation:\nOne way to achieve 7 consecutive black blocks is to recolor the 0th, 3rd, and 4th blocks\nso that blocks = "BBBBBBBWBW". \nIt can be shown that there is no way to achieve 7 consecutive black blocks in less than 3 operations.\nTherefore, we return 3.\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: blocks = "WBWBBBW", k = 2\nOutput: 0\nExplanation:\nNo changes need to be made, since 2 consecutive black blocks already exist.\nTherefore, we return 0.\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"n == blocks.length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= n <= 100")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"blocks[i]")," is either ",(0,a.kt)("inlineCode",{parentName:"li"},"'W'")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"'B'"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= k <= n"))),(0,a.kt)("h2",{id:"approach-1-brute-force"},"Approach 1: Brute Force"),(0,a.kt)(k,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int minimumRecolors(string blocks, int k) {\n        int n = blocks.size(), ans = 1e9;\n        // the idea is to try all positions as a starting point\n        for (int i = 0; i + k <= n; i++) {\n            // count the number of 'W' in a given window size `k`\n            int cnt = 0;\n            for (int j = 0; j < k; j++) {\n                // if it is 'W', we can recolor it\n                if (blocks[i + j] == 'W') {\n                    cnt += 1;\n                }\n            }\n            // keep track of the min value\n            ans = min(ans, cnt);\n        }\n        return ans;\n    }\n};\n")))}b.isMDXComponent=!0}}]);