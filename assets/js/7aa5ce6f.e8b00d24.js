"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[59430],{3905:function(a,e,t){t.d(e,{Zo:function(){return o},kt:function(){return k}});var n=t(67294);function s(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function m(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function p(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach((function(e){s(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function r(a,e){if(null==a)return{};var t,n,s=function(a,e){if(null==a)return{};var t,n,s={},m=Object.keys(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||(s[t]=a[t]);return s}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(s[t]=a[t])}return s}var i=n.createContext({}),l=function(a){var e=n.useContext(i),t=e;return a&&(t="function"==typeof a?a(e):p(p({},e),a)),t},o=function(a){var e=l(a.components);return n.createElement(i.Provider,{value:e},a.children)},N={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,s=a.mdxType,m=a.originalType,i=a.parentName,o=r(a,["components","mdxType","originalType","parentName"]),c=l(t),k=s,h=c["".concat(i,".").concat(k)]||c[k]||N[k]||m;return t?n.createElement(h,p(p({ref:e},o),{},{components:t})):n.createElement(h,p({ref:e},o))}));function k(a,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var m=t.length,p=new Array(m);p[0]=c;var r={};for(var i in e)hasOwnProperty.call(e,i)&&(r[i]=e[i]);r.originalType=a,r.mdxType="string"==typeof a?a:s,p[1]=r;for(var l=2;l<m;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},17746:function(a,e,t){t.r(e),t.d(e,{assets:function(){return N},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return c}});var n,s=t(87462),m=t(63366),p=(t(67294),t(3905)),r=["components"],i={description:"Author: @wingkwong | https://leetcode.com/problems/distinct-subsequences/"},l="0115 - Distinct Subsequences (Hard)",o={unversionedId:"0100-0199/distinct-subsequences-hard",id:"0100-0199/distinct-subsequences-hard",title:"0115 - Distinct Subsequences (Hard)",description:"Author: @wingkwong | https://leetcode.com/problems/distinct-subsequences/",source:"@site/solutions/0100-0199/0115-distinct-subsequences-hard.md",sourceDirName:"0100-0199",slug:"/0100-0199/distinct-subsequences-hard",permalink:"/leetcode-the-hard-way/solutions/0100-0199/distinct-subsequences-hard",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0100-0199/0115-distinct-subsequences-hard.md",tags:[],version:"current",sidebarPosition:115,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/distinct-subsequences/"},sidebar:"tutorialSidebar",previous:{title:"0113 - Path Sum II (Medium)",permalink:"/leetcode-the-hard-way/solutions/0100-0199/path-sum-ii-medium"},next:{title:"0127 - Word Ladder (Hard)",permalink:"/leetcode-the-hard-way/solutions/0100-0199/word-ladder-hard"}},N={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Dynamic Programming",id:"approach-1-dynamic-programming",level:2},{value:"Approach 2: Dynamic Programming (Space Optimised)",id:"approach-2-dynamic-programming-space-optimised",level:2}],k=(n="SolutionAuthor",function(a){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.kt)("div",a)}),h={toc:c};function d(a){var e=a.components,t=(0,m.Z)(a,r);return(0,p.kt)("wrapper",(0,s.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"0115---distinct-subsequences-hard"},"0115 - Distinct Subsequences (Hard)"),(0,p.kt)("h2",{id:"problem-link"},"Problem Link"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/distinct-subsequences/"},"https://leetcode.com/problems/distinct-subsequences/")),(0,p.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,p.kt)("p",null,"Given two strings ",(0,p.kt)("inlineCode",{parentName:"p"},"s")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"t"),", return ",(0,p.kt)("em",{parentName:"p"},"the number of distinct subsequences of ",(0,p.kt)("inlineCode",{parentName:"em"},"s")," which equals ",(0,p.kt)("inlineCode",{parentName:"em"},"t")),"."),(0,p.kt)("p",null,"A string's ",(0,p.kt)("strong",{parentName:"p"},"subsequence")," is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters' relative positions. (i.e., ",(0,p.kt)("inlineCode",{parentName:"p"},'"ACE"')," is a subsequence of ",(0,p.kt)("inlineCode",{parentName:"p"},'"ABCDE"')," while ",(0,p.kt)("inlineCode",{parentName:"p"},'"AEC"')," is not)."),(0,p.kt)("p",null,"The test cases are generated so that the answer fits on a 32-bit signed integer."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Example 1:")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},'Input: s = "rabbbit", t = "rabbit"\nOutput: 3\nExplanation:\nAs shown below, there are 3 ways you can generate "rabbit" from S.\nrabbbit\nrabbbit\nrabbbit\n')),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Example 2:")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},'Input: s = "babgbag", t = "bag"\nOutput: 5\nExplanation:\nAs shown below, there are 5 ways you can generate "bag" from S.\nbabgbag\nbabgbag\nbabgbag\nbabgbag\nbabgbag\n')),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Constraints:")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"1 <= s.length, t.length <= 1000")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"s")," and ",(0,p.kt)("inlineCode",{parentName:"li"},"t")," consist of English letters.")),(0,p.kt)("h2",{id:"approach-1-dynamic-programming"},"Approach 1: Dynamic Programming"),(0,p.kt)("p",null,"Let ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp[i][j]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]")))))," be the number of distinct subsequences if ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"s"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mn",{parentName:"mrow"},"0.."),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"s[0 .. i)")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord"},"0.."),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mclose"},")"))))),"contains ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"t"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mn",{parentName:"mrow"},"0.."),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"t[0 .. j)")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord"},"0.."),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mclose"},")"))))),". The base case is when ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"t")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"t")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6151em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"t")))))," is empty, there is one valid subsequence for each ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"i")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"))))),". If the subsequence doesn't contain ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"s"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"s[i - 1]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"))))),", then we take ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp[i - 1][j]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"))))),". If ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"s"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow"},"="),(0,p.kt)("mo",{parentName:"mrow"},"="),(0,p.kt)("mi",{parentName:"mrow"},"t"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"s[i - 1] == t[j - 1]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"s"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,p.kt)("span",{parentName:"span",className:"mrel"},"=="),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"))))),", then we need to include ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp[i - 1][j - 1]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]")))))," as well as ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow"},"\u2212"),(0,p.kt)("mn",{parentName:"mrow"},"1"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp[i - 1][j]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,p.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,p.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord"},"1"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"))))),"."),(0,p.kt)(k,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        int n = s.size(), m = t.size();\n        unsigned long long dp[n + 1][m + 1];\n        memset(dp, 0, sizeof(dp));\n        for(int i = 0; i <= n; i++) dp[i][0] = 1;\n        for(int i = 1; i <= n; i++) {\n            for(int j = 1; j <= m; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if(s[i - 1] == t[j - 1]) {\n                    dp[i][j] += dp[i - 1][j - 1];\n                }\n            }\n        }\n        return dp[n][m];\n    }\n};\n")),(0,p.kt)("h2",{id:"approach-2-dynamic-programming-space-optimised"},"Approach 2: Dynamic Programming (Space Optimised)"),(0,p.kt)("p",null,"In Approach 1, we calculate ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"i"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,p.kt)("mi",{parentName:"mrow"},"j"),(0,p.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp[i][j]")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,p.kt)("span",{parentName:"span",className:"mopen"},"["),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,p.kt)("span",{parentName:"span",className:"mclose"},"]")))))," based on the previous row. We can simplify it by using a one dimensional array of size ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"m")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"m")))))," where ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"m")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"m")))))," is the length of ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"t")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"t")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6151em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"t")))))," Then we calculate ",(0,p.kt)("span",{parentName:"p",className:"math math-inline"},(0,p.kt)("span",{parentName:"span",className:"katex"},(0,p.kt)("span",{parentName:"span",className:"katex-mathml"},(0,p.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,p.kt)("semantics",{parentName:"math"},(0,p.kt)("mrow",{parentName:"semantics"},(0,p.kt)("mi",{parentName:"mrow"},"d"),(0,p.kt)("mi",{parentName:"mrow"},"p")),(0,p.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"dp")))),(0,p.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,p.kt)("span",{parentName:"span",className:"base"},(0,p.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"d"),(0,p.kt)("span",{parentName:"span",className:"mord mathnormal"},"p")))))," backwards so that the new value won't affect the calculate of the next value."),(0,p.kt)(k,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int numDistinct(string s, string t) {\n        int n = s.size(), m = t.size();\n        unsigned long long dp[m + 1];\n        memset(dp, 0, sizeof(dp));\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = min(i, m); j >= 1; j--) {\n                if (s[i - 1] == t[j - 1]) {\n                    dp[j] += dp[j - 1];\n                }\n            }\n        }\n        return dp[m];\n    }\n};\n")))}d.isMDXComponent=!0}}]);