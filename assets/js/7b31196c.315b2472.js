"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[77750],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},71438:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],l={description:"Author: @ganajayant| https://leetcode.com/problems/sort-colors/",tags:["Array","Two Pointers","Sorting"]},s="0075 - Sort Colors (Medium)",u={unversionedId:"0000-0099/sort-colors-medium",id:"0000-0099/sort-colors-medium",title:"0075 - Sort Colors (Medium)",description:"Author: @ganajayant| https://leetcode.com/problems/sort-colors/",source:"@site/solutions/0000-0099/0075-sort-colors-medium.md",sourceDirName:"0000-0099",slug:"/0000-0099/sort-colors-medium",permalink:"/leetcode-the-hard-way/solutions/0000-0099/sort-colors-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0075-sort-colors-medium.md",tags:[{label:"Array",permalink:"/leetcode-the-hard-way/solutions/tags/array"},{label:"Two Pointers",permalink:"/leetcode-the-hard-way/solutions/tags/two-pointers"},{label:"Sorting",permalink:"/leetcode-the-hard-way/solutions/tags/sorting"}],version:"current",sidebarPosition:75,frontMatter:{description:"Author: @ganajayant| https://leetcode.com/problems/sort-colors/",tags:["Array","Two Pointers","Sorting"]},sidebar:"tutorialSidebar",previous:{title:"0074 - Search a 2D Matrix (Medium)",permalink:"/leetcode-the-hard-way/solutions/0000-0099/search-a-2d-matrix-medium"},next:{title:"0078 - Subsets (Medium)",permalink:"/leetcode-the-hard-way/solutions/0000-0099/subsets-medium"}},c={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Counting",id:"approach-1-counting",level:2}],m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},d=m("Tabs"),h=m("TabItem"),f=m("SolutionAuthor"),b={toc:p};function y(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0075---sort-colors-medium"},"0075 - Sort Colors (Medium)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/sort-colors/"},"https://leetcode.com/problems/sort-colors/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue."),(0,a.kt)("p",null,"We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively."),(0,a.kt)("p",null,"You must solve this problem without using the library's sort function."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [2,0,1]\nOutput: [0,1,2]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"n == nums.length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= n <= 300")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= m, n <= 100")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nums[i] is either 0, 1, or 2"))),(0,a.kt)("h2",{id:"approach-1-counting"},"Approach 1: Counting"),(0,a.kt)("p",null,"Count number of 0's 1's and 2's and add those numbers in array"),(0,a.kt)(d,{mdxType:"Tabs"},(0,a.kt)(h,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)(f,{name:"@ganajayant",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public void sortColors(int[] nums) {\n        int q[] = { 0, 0, 0 };\n        for (int i : nums) {\n            if (i == 0) {\n                q[0]++;\n            } else if (i == 1) {\n                q[1]++;\n            } else {\n                q[2]++;\n            }\n        }\n        for (int i = 0; i < q[0]; i++) {\n            nums[i] = 0;\n        }\n        for (int i = q[0]; i < q[0] + q[1]; i++) {\n            nums[i] = 1;\n        }\n        for (int i = q[1] + q[0]; i < q[0] + q[1] + q[2]; i++) {\n            nums[i] = 2;\n        }\n    }\n}\n")))))}y.isMDXComponent=!0}}]);